name: Tests

on:
  push:
    branches:
      - main
  pull_request:
    paths-ignore:
      - "docs/**"

jobs:
  lint:
    name: Pre-commit Checks
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
      - name: Set up pixi
        uses: prefix-dev/setup-pixi@ba3bb36eb2066252b2363392b7739741bb777659 # v0.8.1
      - name: Install repository
        # needed for generate-col-ops hook
        run: pixi run postinstall
      - name: pre-commit
        run: pixi run pre-commit run -a --color=always --show-diff-on-failure

  test:
    name: pytest
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
        environment:
          - py310
          - py311
          - py312
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4

      - name: Setup Pixi
        uses: prefix-dev/setup-pixi@v0.8.1
        with:
          environments: ${{ matrix.environment }}

      - name: Start Docker Compose
        uses: isbang/compose-action@f1ca7fefe3627c2dab0ae1db43a106d82740245e
        with:
          compose-file: docker-compose.yaml

      - name: Install Microsoft ODBC
        run: sudo ACCEPT_EULA=Y apt-get install -y msodbcsql18

      - name: Wait for Docker Servers
        run: |
          until bash ./.github/scripts/docker_compose_ready.sh; do
            sleep 1
          done

      - name: Run tests
        env:
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
        run: |
          pixi run -e ${{ matrix.environment }} pytest tests -ra ${RUNNER_DEBUG:+-v} --color=yes --postgres --mssql
