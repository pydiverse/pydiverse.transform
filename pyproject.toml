[tool.poetry]
name = "pydiverse-transform"
version = "0.1.0"
description = "Pipe based dataframe manipulation library that can also transform data on SQL databases"
authors = [
  "QuantCo, Inc.",
  "Nicolas Camenisch <garnele007@gmail.com>",
]
license = "BSD-3-Clause"
readme = "README.md"
packages = [
	{ include = "pydiverse", from = "src" }
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Programming Language :: SQL",
  "Topic :: Database",
]

[tool.poetry.dependencies]
python = "^3.8"
numpy = "^1.23.1"
pandas = "^1.4.3"
SQLAlchemy = "^1.4.39"
mutate = "^0.0.1-alpha.13"

Sphinx = { version = "^5.1.1", optional = true }
sphinx-rtd-theme = { version = "^1.0.0", optional = true }
sphinxcontrib-apidoc = { version="^0.3.0", optional = true }

[tool.poetry.extras]
docs = ["Sphinx", "sphinx-rtd-theme", "sphinxcontrib-apidoc"]

[tool.poetry.dev-dependencies]
pytest = "^7.1.2"
#pyodbc = "^4.0.34"
pytest-xdist = "^2.5.0"
psycopg2 = "2.9.3"
black = "^22.6.0"
pre-commit = "^2.20.0"
isort = "^5.10.1"

[tool.black]
exclude = '''
/(
    \.eggs
  | \.git
  | \.venv
  | build
  | dist
)/
'''

preview = true

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
ensure_newline_before_comments = true
line_length = 88
known_first_party = "pydiverse.transform"
skip_glob = '\.eggs/*,\.git/*,\.venv/*,build/*,dist/*'
default_section = 'THIRDPARTY'

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
