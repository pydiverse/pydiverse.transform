[tool.poetry]
name = "pydiverse-transform"
version = "0.1.5"
description = "Pipe based dataframe manipulation library that can also transform data on SQL databases"
authors = [
  "QuantCo, Inc.",
  "Nicolas Camenisch <garnele007@gmail.com>",
  "Martin Trautmann <windiana@users.sf.net>",
]
license = "BSD-3-Clause"
readme = "docs/package/README.md"
packages = [
	{ include = "pydiverse", from = "src" }
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Programming Language :: SQL",
  "Topic :: Database",
]

[tool.poetry.dependencies]
python = ">=3.9"
numpy = ">=1.23.1"
pandas = ">=1.4.3"
SQLAlchemy = ">=1.4.27"
pyarrow = {version = ">=11.0.0", optional=true}

[tool.poetry.extras]
pyarrow = ["pyarrow"]

[tool.poetry.group.dev.dependencies]
pytest = ">=7.1.2"
pytest-xdist = ">=2.5.0"

black = { version = "23.3.0", extras = ["d"] }
ruff = "^0.1"
pre-commit = ">=2.20.0"

duckdb = ">=0.8.1"
duckdb-engine = ">=0.9.1"

[tool.poetry.group.tests]
optional = true

[tool.poetry.group.tests.dependencies]
# Postgres
psycopg2 = ">=2.9.3"
# MSSQL
pyodbc = ">=4.0.35"
# IBM DB2
ibm-db = { version = ">=3.1.4", markers="platform_machine == 'x86_64'" }
ibm-db-sa = { version = ">=0.3.8", markers="platform_machine == 'x86_64'" }

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
Sphinx = "^7.0.1"
furo = "^2023.5.20"
sphinxcontrib-apidoc = "^0.3.0"
myst-parser = "^2.0.0"

[tool.black]
exclude = '''
/(
    \.eggs
  | \.git
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
select = [
    "F",
    "E",
    "UP",
    "W",
    "I001",
    "I002",
    "B",
    "A",
]
ignore = [
    "B017",
    "B028",
    "A001",  # Keep while filter verb still is called filter
    "A003",  # Keep while filter verb still is called filter
]
extend-exclude = ["docs/*"]
ignore-init-module-imports = true
fix = true
target-version = "py38"

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401", "F403"]
"tests/*" = ["F403", "F405", "E711"]

[tool.ruff.isort]
known-first-party = ["pydiverse"]
required-imports = ["from __future__ import annotations"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
