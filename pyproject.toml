[project]
name = "pydiverse-transform"
version = "0.2.2"
description = "Pipe based dataframe manipulation library that can also transform data on SQL databases"
authors = [
  { name = "QuantCo, Inc." },
  { name = "Nicolas Camenisch", email = "garnele007@gmail.com" },
  { name = "Martin Trautmann", email = "windiana@users.sf.net" },
]
license = "BSD-3-Clause"
readme = "docs/package/README.md"
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Programming Language :: SQL",
  "Topic :: Database",
]
requires-python = ">=3.10"
dependencies = [
  "pandas>=2.0.0",
  "polars>=1.6.0",
  "SQLAlchemy>=2.0.0",
  "pyarrow>=11.0.0",
]

[project.optional-dependencies]
duckdb = ["duckdb>=0.8.1", "duckdb_engine>=0.9.1"]
postgres = ["psycopg2>=2.9.3"]
mssql = ["pyodbc>=4.0.35"]

[tool.hatch.build.targets.wheel]
packages = ["src/pydiverse"]

[tool.ruff]
target-version = "py310"
extend-exclude = ["docs/*"]
fix = true

[tool.ruff.lint]
select = ["F", "E", "UP", "W", "I001", "I002", "B", "A"]
ignore = [
  "B017",
  "B028",
  "A001", # Keep while filter verb still is called filter
  "A003", # Keep while filter verb still is called filter
]
ignore-init-module-imports = true

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403"]
"tests/*" = ["F403", "F405", "E711"]

[tool.ruff.lint.isort]
known-first-party = ["pydiverse"]
required-imports = ["from __future__ import annotations"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
